---
apiVersion: 1.0.0
metadata:
  generateName: nodejs-configmap-
projects:
  - name: nodejs-configmap
    source:
      location: "https://github.com/crw-samples/nodejs-configmap.git"
      branch: 12.x
      type: git
components:
  - id: vscode/typescript-language-features/latest
    type: chePlugin
  - type: chePlugin
    id: ms-vscode/node-debug2/latest
  - mountSources: true
    type: dockerimage
    memoryLimit: 1Gi
    alias: nodejs
    image: registry.redhat.io/codeready-workspaces/plugin-java8-rhel8:2.16
    endpoints:
      - name: "nodejs"
        port: 8080
    env:
      - name: NODE_CONFIGMAP_PATH
        value: /projects/nodejs-configmap/app-config.yml
  - id: redhat/vscode-openshift-connector/latest
    type: chePlugin
    alias: openshift-connector
commands:
  - name: 1. Install dependencies
    actions:
      - workdir: "${CHE_PROJECTS_ROOT}/nodejs-configmap"
        type: exec
        command: npm install
        component: nodejs
  - name: 2. Run application
    actions:
      - workdir: "${CHE_PROJECTS_ROOT}/nodejs-configmap"
        type: exec
        command: node --inspect=9229 .
        component: nodejs
  - name: 3. Log into deployment cluster
    actions:
      - workdir: "${CHE_PROJECTS_ROOT}/nodejs-configmap"
        type: exec
        command: |
          echo
          echo "Before you can deploy this application to an openshift cluster,"
          echo "you must run 'oc login ...' in the nodejs terminal."
          echo
        component: nodejs
  - name: 4. Deploy application
    actions:
      - workdir: "${CHE_PROJECTS_ROOT}/nodejs-configmap"
        type: exec
        command: npm run openshift
        component: nodejs
  - name: Attach remote debugger
    actions:
      - type: vscode-launch
        referenceContent: |
          {
            "version": "0.2.0",
            "configurations": [
              {
                "type": "node",
                "request": "attach",
                "name": "Attach to Remote",
                "address": "localhost",
                "port": 9229,
                "localRoot": "${workspaceFolder}",
                "remoteRoot": "${workspaceFolder}"
              }
            ]
          }
