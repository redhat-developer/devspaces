---
apiVersion: 1.0.0
metadata:
  generateName: nodejs-mongo-
projects:
  - name: nodejs-mongodb-sample
    source:
      location: "https://github.com/crw-samples/nodejs-mongodb-sample"
      branch: master
      type: git
components:
  - type: chePlugin
    id: vscode/typescript-language-features/latest
  - type: chePlugin
    id: ms-vscode/node-debug2/latest
  - type: dockerimage
    alias: nodejs
    image: quay.io/devspaces/udi-rhel8:3.1
    env:
      # The values below are used to set up the environment for running the application
      - name: SECRET
        value: 220fd770-c028-480d-8f95-f84353c7d55a
      - name: NODE_ENV
        value: production
    memoryLimit: 512Mi
    endpoints:
      - name: "nodejs"
        port: 8080
    mountSources: true
  - type: dockerimage
    alias: mongo
    image: registry.redhat.io/rhscl/mongodb-36-rhel7:1-50
    memoryLimit: 512Mi
    env:
      - name: MONGODB_USER
        value: user
      - name: MONGODB_PASSWORD
        value: password
      - name: MONGODB_DATABASE
        value: guestbook
      - name: MONGODB_ADMIN_PASSWORD
        value: password
    volumes:
      - name: mongo-storage
        containerPath: /var/lib/mongodb/data
    endpoints:
      - name: mongodb
        port: 27017
        attributes:
          discoverable: "true"
          public: "false"
commands:
  - name: 1. Run the application
    actions:
      - type: exec
        component: nodejs
        command: npm install && node --inspect=9229 app.js
        workdir: ${CHE_PROJECTS_ROOT}/nodejs-mongodb-sample
  - name: Debug remote node application
    actions:
      - type: vscode-launch
        referenceContent: |
          {
          "version": "0.2.0",
          "configurations": [
            {
              "type": "node",
              "name": "Debug (Attach) - Remote",
              "request": "attach",
              "port": 9229
            }]
          }
