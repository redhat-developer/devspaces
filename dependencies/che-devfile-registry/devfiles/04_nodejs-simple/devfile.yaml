---
apiVersion: 1.0.0
metadata:
  generateName: nodejs-
projects:
  - name: nodejs-web-app
    source:
      location: "https://github.com/che-samples/web-nodejs-sample.git"
      branch: master
      type: git
components:
  - type: chePlugin
    id: vscode/typescript-language-features/latest
  - type: chePlugin
    id: ms-vscode/node-debug2/latest
  - type: dockerimage
    alias: nodejs
    image: quay.io/devspaces/udi-rhel8:3.1
    memoryLimit: 512Mi
    endpoints:
      - name: "nodejs"
        port: 3000
    mountSources: true
commands:
  - name: 1. Run the web app (and download dependencies)
    actions:
      - type: exec
        component: nodejs
        command: npm install; nodemon app.js
        workdir: ${CHE_PROJECTS_ROOT}/nodejs-web-app/app
  - name: 2. Download dependencies
    actions:
      - type: exec
        component: nodejs
        command: npm install
        workdir: ${CHE_PROJECTS_ROOT}/nodejs-web-app/app
  - name: 3. Run the web app
    actions:
      - type: exec
        component: nodejs
        command: nodemon app.js
        workdir: ${CHE_PROJECTS_ROOT}/nodejs-web-app/app
  - name: 4. Run the web app (debugging enabled)
    actions:
      - type: exec
        component: nodejs
        command: nodemon --inspect app.js
        workdir: ${CHE_PROJECTS_ROOT}/nodejs-web-app/app
  - name: 5. Stop the web app
    actions:
      - type: exec
        component: nodejs
        command: >-
          node_server_pids=$(pgrep -fx '.*nodemon (--inspect )?app.js' | tr "\\n" " ") &&
          echo "Stopping node server with PIDs: ${node_server_pids}" &&
          kill -15 ${node_server_pids} &>/dev/null && echo 'Done.'
  - name: Attach remote debugger
    actions:
      - type: vscode-launch
        referenceContent: |
          {
            "version": "0.2.0",
            "configurations": [
              {
                "type": "node",
                "request": "attach",
                "name": "Attach to Remote",
                "address": "localhost",
                "port": 9229,
                "localRoot": "${workspaceFolder}",
                "remoteRoot": "${workspaceFolder}"
              }
            ]
          }
